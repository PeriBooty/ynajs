var Yna=function(t,n){"use strict";const s=class{constructor(t,n,s){this.name=t,this.options=n,this.data=s}log(t,n){if(this.options.debug){const s=[this.name,...t].join("::");console.log(`${s}: ${JSON.stringify(n)}`)}}},e=(t,n)=>`<${t}:${n.message}>`,o=(t,n)=>{let s=0;t.split("").forEach((t,e)=>{const o={open:"{"===t,close:"}"===t};o.open?s++:o.close&&s--;n(t,e,s,o)});return s},i=class extends s{constructor(t,n){super("PARSER",t,n)}parseString(t,n=!0){const s=[];let i,r,c=0;const u=o(t,(n,e,o,i)=>{const r=t.substr(c,e-c);i.open&&1===o?(s.push(r),c=e):i.close&&0===o&&(s.push(this.parseBlock(r.substr(1,r.length-1))),c=e+1)});if(s.push(t.substr(c)),0!==u)i=e("parser",new Error("mismatched brackets")),r="error";else{const t=n?s.filter(t=>t.length>0):s;1===t.length?(i=t[0],r="single"):(i=t,r="mixed")}return this.log(["string",r],i),i}parseBlock(t){const n=t.trim();let s,e;if(n.startsWith("!")){const n="{"+t.replace("!","")+"}";s=[2,n],e="comment"}else if(n.startsWith(">")){const n="{"+t.replace(">","")+"}";s=n,e="escaped"}else if(n.endsWith(";")){const n=this.parseBlockData(t);s=[1,n.name,n.args],e="command"}else{const n=this.parseString(t);s=[0,n],e="key"}return this.log(["block",e],s),s}parseBlockData(t){const n=[],s={name:"",args:""};let i,r=0,c=!1;return 0!==o(t,(s,e,o)=>{if(0===o&&(";"===s||":"===s&&!c)){const o=this.parseString(t.substr(r,e-r),!0);n.push(o),r=e+1,":"===s&&(c=!0)}})?(s.name=n[0],s.args=e("parser",new Error("mismatched brackets")),i="error"):(s.name=n[0],s.args=n.slice(1),i="mixed"),this.log(["strData",i],s),s}},r={debug:!1,loadJSON:!1},c={debug:!1,depth:0},u={},a=()=>{const n=t.mapFromObject({foo:()=>"foo"});return n},f=t=>n.utc(t).format("YYYY-MM-DD HH:mm:ss:SSSSSS"),h=(s,e)=>{const o=new Map;o.set("time",f(n.utc()));o.set("newrep",!1);o.set("args",s.join(" "));o.set("arglen",s.length);s.forEach((t,n)=>{o.set(`arg${n+1}`,t)});t.forEachEntry(e,(t,n)=>{o.set(n,t)});return o},l=class extends s{constructor(t,n,s,e){super("RUNNER",s,e),this.commands=t,this.keys=n}execItem(t,n){return""}execArr(t){}resolveCommand(t,n){}resolveKey(t){}};return class{constructor(n,s={},e={}){const o=t.objDefaultsDeep(s,r),c=t.objDefaultsDeep(e,u);this.commands=a(),o.loadJSON?this.tree=n:this.tree=new i(o,c).parseString(n)}addCommand(t,n){this.commands.set(t,n)}run(n=[],s={},e={},o={}){const i=t.objDefaultsDeep(e,c),r=t.objDefaults(o,u),a=h(n,s);return console.log(a),new l(this.commands,a,i,r).execItem(this.tree)}}}(lightdash,moment);
//# sourceMappingURL=yna.min.js.map
